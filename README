
  This library includes:

    * Direct implementation of the algebraic data types.
      See `adt.lisp' and `examples/adt.lisp'.

    * 1-level pattern matching over that ADTs.
      See `npm.lisp' and `examples/npm.lisp'.

    * Some noisy staff.

  Possible plans for future developments:

    * Implement nested pattern matching.

    * Implement `virtual' ADT declarations -- e.g. define virtual ADTs for
      primitive types in CL, so they can be matched with PM algorithm as
      ususal ADTs.

    * Implement language definitions in BNF form (using cl-yacc for parsing).

    * Implement language fusion (e.g., define eDSL's _over_ CL).
